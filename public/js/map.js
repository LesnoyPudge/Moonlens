import{setCheck,toggleState}from"./searchBox.js";import{orderModalOpen}from"./orderModal.js";export function mapLoad(){let e=document.querySelector("#map"),t=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&(ymaps.ready(init),t.unobserve(e.target))})},{root:null,rootMargin:"0px 0px 100px 0px",threshold:0});t.observe(e)}function init(){let e=new ymaps.Map("map",{center:[55.76,37.64],zoom:9},{searchControlProvider:"yandex#search"}),t=new ymaps.ObjectManager({clusterize:!0,gridSize:64,clusterDisableClickZoom:!1});e.geoObjects.add(t),e.behaviors.disable("scrollZoom"),ymaps.modules.define("CustomLayoutModule",["templateLayoutFactory","layout.storage"],(function(e,t,o){let n=t.createClass('<div class="map__balloon balloon">\n            <div class="balloon__body">\n            <div class="arrow"></div>\n            $[[options.contentLayout]]\n            <img class="balloon__close" src="images/close-button.svg">\n            </div>\n            </div>',{build:function(){this.constructor.superclass.build.call(this),this._$element=$(".balloon",this.getParentElement()),this._$element.find(".balloon__close").on("click",$.proxy(this.onCloseClick,this))},clear:function(){this._$element.find(".balloon__close").off("click"),this.constructor.superclass.clear.call(this)},onSublayoutSizeChange:function(){MyBalloonLayout.superclass.onSublayoutSizeChange.apply(this,arguments),this._isElement(this._$element)&&this.events.fire("shapechange")},applyElementOffset:function(){this._$element.css({left:-this._$element[0].offsetWidth/2,top:-(this._$element[0].offsetHeight+this._$element.find(".arrow")[0].offsetHeight)})},onCloseClick:function(e){e.preventDefault(),this.events.fire("userclose")},getShape:function(){if(!this._isElement(this._$element))return MyBalloonLayout.superclass.getShape.call(this);var e=this._$element.position();return new ymaps.shape.Rectangle(new ymaps.geometry.pixel.Rectangle([[e.left,e.top],[e.left+this._$element[0].offsetWidth,e.top+this._$element[0].offsetHeight+this._$element.find(".arrow")[0].offsetHeight]]))},_isElement:function(e){return e&&e[0]&&e.find(".arrow")[0]}});o.add("customLayout",n),e(n)})),ymaps.modules.define("CustomContentLayoutModule",["templateLayoutFactory","layout.storage"],(function(e,t,o){var n=t.createClass('<div class="balloon__content">\n            <h5 class="balloon__title">{{ properties.clinic_name|default:"идет загрузка..." }}</h5>\n            <address class="balloon__address">{{ properties.clinic_address|default:"не указан" }}</address>\n            <a class="balloon__email" href="mailto:{{ properties.clinic_email|default:"" }}">{{ properties.clinic_email|default:"не указан" }}</a>\n            <a class="balloon__site" href="#" >{{ properties.clinic_site|default:"не указан" }}</a>\n            <a class="balloon__phone" href="tel:{{ properties.clinic_phone|default:"" }}">{{ properties.clinic_phone|default:"не указан" }}</a>\n            <button type="button" class="balloon__order-button order-button" id="order-button" data-clinic-id="{{ properties.clinic_id}}">Записаться на приём</button>\n            </div>');o.add("customContentLayout",n),e(n)})),ymaps.modules.define("MyIconContentLayoutModule",["templateLayoutFactory","layout.storage"],(function(e,t,o){let n=t.createClass('<svg class="map-icon" id="$[id]" data-state="">\n                <use xlink:href="#map-icon"></use>\n            </svg>');o.add("MyIconContentLayout",n),e(n)})),ymaps.modules.require(["CustomContentLayoutModule"]),ymaps.modules.require(["CustomLayoutModule"]),ymaps.modules.require(["MyIconContentLayoutModule"]),t.objects.events.add("balloonopen",e=>{let o=e.get("objectId"),n=t.objects.getById(o);toggleState(document.getElementById(o)),async function(e,o,n){let l=e.filter((function(e){return"идет загрузка..."===e.properties.balloonTitle||"Not found"===e.properties.balloonTitle})).map((function(e){return e.id}));l.length&&ymaps.vow.resolve($.getJSON({contentType:"application/json",type:"POST",data:JSON.stringify(l),url:"/clinicDesc",dataType:"json",processData:!1})).then((function(t){e.forEach((function(e){e.properties.country_name=t.country_name,e.properties.city_name=t.city_name,e.properties.clinic_id=t.clinic_id,e.properties.clinic_name=t.clinic_name,e.properties.clinic_address=t.clinic_address,e.properties.clinic_email=t.clinic_email,e.properties.clinic_site=t.clinic_site,e.properties.clinic_phone=t.clinic_phone})),s()}),(function(){e.forEach((function(e){e.properties.clinic_title="Not found"})),s()}));function s(){n&&t.clusters.balloon.isOpen(o)?t.clusters.balloon.setData(t.clusters.balloon.getData()):t.objects.balloon.isOpen(o)&&t.objects.balloon.setData(t.objects.balloon.getData())}}([n],o)}),t.objects.events.add("balloonclose",e=>{let t=e.get("objectId");toggleState(document.getElementById(t))}),t.objects.events.add("click",e=>{let o=e.get("objectId");t.objects.balloon.isOpen(o)&&t.objects.balloon.close()}),e.events.add("click",()=>{e.balloon.close()}),map.addEventListener("click",e=>{if("order-button"!=e.target.id)return;let o=e.target.dataset.clinicId,n=t.objects.getById(o);orderModalOpen(n)}),output.addEventListener("click",o=>{if(!o.target.closest("[class$=item]"))return;console.log("тык");let n=o.target.closest("[class$=item]"),l=n.dataset.id,s=(a=l,t.objects._objectsById[a].geometry.coordinates);var a;setCheck(output,n),e.setCenter(s),e.setZoom(11),e.panTo(s,{delay:0,flying:!1}),t.objects.balloon.open(l)}),$.ajax({url:"/clinicCoords"}).done((function(e){t.add(e)}))}